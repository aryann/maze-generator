#!/usr/bin/env python
import cStringIO
import random
import os


_RIGHT_WALL = 0b01
_BOTTOM_WALL = 0b10


class Maze(object):

    def __init__(self, n):
        self.maze = []
        self.n = n
        for _ in xrange(n):
            self.maze.append([_RIGHT_WALL | _BOTTOM_WALL] * n)

        # Just to make sure _RamoveWall works, let's run it 10 times.
        for _ in range(10):
            self._RemoveWall()

    def _RemoveWall(self):
        row = random.randint(0, self.n - 1)
        col = random.randint(0, self.n - 1)
        wall_to_remove = random.choice([_RIGHT_WALL, _BOTTOM_WALL])
        self.maze[row][col] = self.maze[row][col] & ~wall_to_remove

    def __str__(self):
        buf = cStringIO.StringIO()
        for _ in self.maze[0]:
            buf.write('+')
            buf.write('--')
        buf.write('+')
        buf.write(os.linesep)
        for row in self.maze:
            buf.write('|')
            for cell in row:
                buf.write('  ')
                if cell & _RIGHT_WALL:
                    buf.write('|')
                else:
                    buf.write(' ')
            buf.write(os.linesep)
            buf.write('+')
            for cell in row:
                if cell & _BOTTOM_WALL:
                    buf.write('--')
                else:
                    buf.write('  ')
                buf.write('+')
            buf.write(os.linesep)
        return buf.getvalue()


if __name__ == '__main__':
    maze = Maze(10)
    print maze
